#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã —Å Gemini API
"""

import os
from word_processor import WordProcessor
from llm import GeminiClient

def test_gemini():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–±–æ—Ç—É —Å Gemini API"""
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    api_key = os.getenv('GEMINI_API_KEY')
    if not api_key:
        print("‚ùå GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: set GEMINI_API_KEY=your_key_here")
        return
    
    print("‚úÖ GEMINI_API_KEY –Ω–∞–π–¥–µ–Ω")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        llm_client = GeminiClient()
        print("‚úÖ GeminiClient —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        processor = WordProcessor()
        print("‚úÖ WordProcessor —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤
        docs_files = [f for f in os.listdir("docs") if f.endswith(('.docx', '.doc'))]
        if not docs_files:
            print("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ docs/")
            return
        
        demo_file = docs_files[0]
        print(f"üìÑ –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ñ–∞–π–ª–æ–º: {demo_file}")
        
        # –ü—Ä–æ—Å—Ç–æ–π –ø—Ä–æ–º—Ç –¥–ª—è —Ç–µ—Å—Ç–∞
        prompt = "–ò–∑–º–µ–Ω–∏ –≤—Å–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è —Å–ª–æ–≤–∞ '—Ñ–∏–ª–æ—Å–æ—Ñ–∏—è' –Ω–∞ '—Ñ–∏–ª–æ—Å–æ—Ñ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ' –≤ —Ç–µ–∫—Å—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞."
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç
        result = processor.process_document(demo_file, prompt, llm_client)
        
        if result:
            print(f"‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ: {result}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    test_gemini()
