#!/usr/bin/env python3
"""
–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é LLM
"""

import os
from pathlib import Path
from dotenv import load_dotenv
from word_processor import WordProcessor
from llm import OpenRouterClient

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env —Ñ–∞–π–ª–∞
load_dotenv()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤"""
    
    print("ü§ñ –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –ø–æ–º–æ—â—å—é LLM")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    api_key = os.getenv('API_KEY')
    if not api_key:
        print("‚ùå API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é: set API_KEY=your_key_here")
        return
    
    print("‚úÖ API_KEY –Ω–∞–π–¥–µ–Ω")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç
        llm_client = OpenRouterClient()
        print(f"‚úÖ OpenRouterClient —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ (–º–æ–¥–µ–ª—å: {llm_client.model_name})")
        
        # –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä
        processor = WordProcessor()
        print("‚úÖ WordProcessor —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ docs
        docs_files = [f for f in os.listdir("docs") if f.endswith(('.docx', '.doc'))]
        if not docs_files:
            print("‚ùå –ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –≤ –ø–∞–ø–∫–µ docs/")
            print("üí° –ü–æ–º–µ—Å—Ç–∏—Ç–µ .docx –∏–ª–∏ .doc —Ñ–∞–π–ª—ã –≤ –ø–∞–ø–∫—É docs/")
            return
        
        print(f"\nüìÅ –ù–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª–æ–≤ –≤ docs/: {len(docs_files)}")
        for i, file in enumerate(docs_files, 1):
            print(f"  {i}. {file}")
        
        # –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞
        while True:
            try:
                choice = input(f"\nüìÑ –í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª (1-{len(docs_files)}) –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞: ").strip()
                
                # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω –Ω–æ–º–µ—Ä
                if choice.isdigit():
                    file_index = int(choice) - 1
                    if 0 <= file_index < len(docs_files):
                        selected_file = docs_files[file_index]
                        break
                    else:
                        print(f"‚ùå –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ {len(docs_files)}")
                        continue
                
                # –ï—Å–ª–∏ –≤–≤–µ–¥–µ–Ω–æ –∏–º—è —Ñ–∞–π–ª–∞
                if choice in docs_files:
                    selected_file = choice
                    break
                else:
                    print(f"‚ùå –§–∞–π–ª '{choice}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ docs/")
                    print("üí° –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–∞–π–ª—ã:", ", ".join(docs_files))
                    continue
                    
            except KeyboardInterrupt:
                print("\nüëã –í—ã—Ö–æ–¥...")
                return
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}")
                continue
        
        print(f"‚úÖ –í—ã–±—Ä–∞–Ω —Ñ–∞–π–ª: {selected_file}")
        
        # –í–≤–æ–¥ –ø—Ä–æ–º—Ç–∞
        print("\nüìù –í–≤–µ–¥–∏—Ç–µ –ø—Ä–æ–º—Ç –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞:")
        while True:
            try:
                prompt = input("\nüî§ –í–∞—à –ø—Ä–æ–º—Ç: ").strip()
                if prompt:
                    break
                else:
                    print("‚ùå –ü—Ä–æ–º—Ç –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø—É—Å—Ç—ã–º")
                    continue
            except KeyboardInterrupt:
                print("\nüëã –í—ã—Ö–æ–¥...")
                return
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –≤–≤–æ–¥–∞: {e}")
                continue
        
        print(f"‚úÖ –ü—Ä–æ–º—Ç –ø—Ä–∏–Ω—è—Ç: {prompt}")
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        print(f"\nüîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–æ–∫—É–º–µ–Ω—Ç: {selected_file}")
        print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è...")
        
        result = processor.process_document(selected_file, prompt, llm_client)
        
        if result:
            print(f"\n‚úÖ –î–æ–∫—É–º–µ–Ω—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
            print(f"üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {result}")
            print(f"üíæ –ò—Å—Ö–æ–¥–Ω—ã–π —Ñ–∞–π–ª: docs/{selected_file}")
            print(f"üìÑ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª: {result}")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
