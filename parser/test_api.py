"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ API kad.arbitr.ru
"""
import requests
import json

def test_kad_arbitr_api():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º API kad.arbitr.ru"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API kad.arbitr.ru")
    print("=" * 50)
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ endpoints
    endpoints = [
        "https://kad.arbitr.ru/api/search",
        "https://kad.arbitr.ru/Search",
        "https://kad.arbitr.ru/api/documents",
        "https://kad.arbitr.ru/api/cases"
    ]
    
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36",
        "Accept": "application/json, text/plain, */*",
        "Accept-Language": "ru-RU,ru;q=0.9,en;q=0.8"
    }
    
    test_data = {
        "Count": 5,
        "Page": 1,
        "DateFrom": "2024-01-01T00:00:00",
        "DateTo": "2024-01-31T23:59:59"
    }
    
    for endpoint in endpoints:
        print(f"\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º: {endpoint}")
        try:
            response = requests.post(endpoint, json=test_data, headers=headers, timeout=10)
            print(f"   –°—Ç–∞—Ç—É—Å: {response.status_code}")
            
            if response.status_code == 200:
                try:
                    data = response.json()
                    print(f"   ‚úÖ JSON –æ—Ç–≤–µ—Ç –ø–æ–ª—É—á–µ–Ω")
                    print(f"   –ö–ª—é—á–∏ –≤ –æ—Ç–≤–µ—Ç–µ: {list(data.keys())}")
                    
                    # –ò—â–µ–º —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
                    for key in ['items', 'documents', 'results', 'data']:
                        if key in data and isinstance(data[key], list):
                            print(f"   üìÑ –ù–∞–π–¥–µ–Ω—ã –¥–æ–∫—É–º–µ–Ω—Ç—ã –≤ –ø–æ–ª–µ '{key}': {len(data[key])} —à—Ç.")
                            if data[key]:
                                print(f"   –ü—Ä–∏–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞: {list(data[key][0].keys())}")
                            break
                    else:
                        print(f"   ‚ö†Ô∏è –°–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
                        
                except json.JSONDecodeError:
                    print(f"   ‚ùå –ù–µ JSON –æ—Ç–≤–µ—Ç: {response.text[:200]}")
            else:
                print(f"   ‚ùå –û—à–∏–±–∫–∞: {response.text[:200]}")
                
        except Exception as e:
            print(f"   ‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ: {e}")
    
    print("\n" + "=" * 50)
    print("üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π endpoint –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    print("2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç–∏ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞–Ω–Ω—ã—Ö")
    print("3. –í–æ–∑–º–æ–∂–Ω–æ –Ω—É–∂–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ cookies")

if __name__ == "__main__":
    test_kad_arbitr_api()
